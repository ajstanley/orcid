<?php
use Drupal\Core\Database\Database;
use Drupal\Core\Link;
use Drupal\Core\Url;
use Drupal\Core\Entity;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\User\UserInterface;

/**
 * Implements hook_requirements().
 */
function orcid_requirements($phase) {
  $requirements = [];
  if ($phase == 'install') {
    if (!class_exists('League\OAuth2\Client\Provider\GenericProvider')) {
      $requirements['oauth2-client'] = [
        'description' => t('ORCID module requires the thephpleague/oauth2-client library.'),
        'severity' => REQUIREMENT_ERROR,
      ];
    }
    return $requirements;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function orcid_form_user_login_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $link = orcid_oath_link();
  if ($link) {
    $form['orcid'] = [
      '#markup' => '<div><img src="http://orcid.org/sites/default/files/images/orcid_16x16.png">' . $link . '</div>',
    ];
  }
}

function orcid_entity_extra_field_info() {
  $extra_fields = [
    'user' => [
      'user' => [
        'display' => [
          'orcid' => [
            'label' => t('ORCID'),
            'description' => "User's unique ORCID identifier",
            'weight' => 0,
            'visible' => FALSE,
            //'render_class' => 'full\qualified\namespace\RenderClass',
          ],
        ],
      ],
    ],
  ];
  return $extra_fields;
}

/**
 * Implements hook_ENTITY_TYPE_view_alter() for user entities.
 *
 * This function adds a default alt tag to the user_picture field to maintain
 * accessibility.
 */
function orcid_user_view_alter(array &$build, UserInterface $account, EntityViewDisplayInterface $display) {
  $id = orcid_load_id($account);
  $orcid_display = $display->getComponent('orcid');
  if ($orcid_display) {
    if ($id) {
      //https://members.orcid.org/logos-web-graphics
      $uri = 'http://orcid.org/' . $id;
      $url = Url::fromUri($uri, ['absolute' => TRUE]);
      $link = Link::fromTextAndUrl($uri, $url)->toString();
    }
    else {
      $link = orcid_oath_link();
    }
    if ($link) {
      $build['orcid'] = [
        '#type' => 'item',
        '#markup' => '<div><img src="http://orcid.org/sites/default/files/images/orcid_16x16.png">' . $link . '</div>',
        '#weight' => $orcid_display['weight'],
      ];
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function orcid_delete_user($account) {
  if ($account->id()) {
    $query = Database::getConnection()
      ->delete('orcid')
      ->condition('uid', $account->id(), '=')
      ->execute();
  }
}


function orcid_load_id($account) {
  if ($account->id()) {
    $query = Database::getConnection()
      ->select('orcid', 'o')
      ->fields('o', ['orcid'])
      ->condition('uid', $account->id(), '=');
    $result = $query->execute();
    foreach ($result as $item) {
      return $item->orcid;
    }
  }
  return FALSE;
}

/**
 * Implements hook_cache_flush().
 */
function orcid_oath_link() {
  $config =  \Drupal::config('orcid.settings');
  if ($config->get('client_id') == '' || $config->get('client_secret') == '') {
    return FALSE;
  }
  $current_url = Url::fromRoute('<current>', [], ['absolute' => TRUE])
    ->toString();
  $url = Url::fromRoute('orcid.oauth_redirect', ['destination' => $current_url]);
  $link = Link::fromTextAndUrl(t('Connect your ORCID iD'), $url);
  return $link->toString();
}